name: Publish resume in JSONResume format as Github Page

# Controls when the action will run. 
on:
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  JSON_RESUME_THEME_HTML: kendall
  JSON_RESUME_THEME_PDF: onepage-plus

jobs:
  check_run:
    runs-on: ubuntu-latest
    if: "! contains(github.event.head_commit.message, '[ci skip]')"
    steps:
      - run: echo "${{ github.event.head_commit.message }}"

  build:
    runs-on: ubuntu-latest
    needs: check_run
    steps:
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%d')"
      - uses: actions/checkout@v2
      - name: Add build info to resume.yaml
        id: add-build-info-resume-yaml
        uses: mikefarah/yq@master
        with:
          cmd: DATE=${{ steps.date.outputs.date }}  yq '(.. | select(tag == "!!str")) |= envsubst' resume.yaml > resume-working.yaml
      - name: NPM install
        id: npm-install
        run: npm install
      - name: Convert yaml to json
        id: yaml-to-js
        run: npx yaml2json resume-working.yaml > resume.json
      - name: Export resume as HTML
        id: export-html
        run: npx resume export docs/index.html --theme ${JSON_RESUME_THEME_HTML}
      - name: Export resume as PDF
        id: export-pdf
        run: |
          npx resume export resume.pdf.html --theme ${JSON_RESUME_THEME_PDF}
          npx puppeteer print resume.pdf.html resume.pdf --format A4 --margin-top 10mm --sandbox=false
      - name: Commit published HTML
        id: commit
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          if [ -n "$(git status --porcelain docs/index.html)" ]; then
            git add docs/index.html
            git commit -m "[ci skip] Release"
            echo ::set-output name=exit_code::0
          else
            echo ::set-output name=exit_code::1
          fi
      - name: Push changes
        uses: ad-m/github-push-action@master
        if: steps.commit.outputs.exit_code == 0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
      - name: Upload static files as artifact
        id: deployment
        uses: actions/upload-pages-artifact@v3 
        with:
          path: docs/

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
      - name: Create new release
        id: create-release
        uses: shogo82148/actions-create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ steps.date.outputs.date }}
          release_name: Release ${{ needs.date.outputs.date }}
          body: New resume ${{ needs.date.outputs.date }}             
          draft: false
          prerelease: false
          overwrite: true
      - name: Upload Release resume PDF
        id: upload-release-resume-pdf
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./resume.pdf
          asset_name: vspadaro-${{ needs.date.outputs.date }}.pdf
          asset_content_type: application/pdf
